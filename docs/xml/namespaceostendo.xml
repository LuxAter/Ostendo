<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceostendo" kind="namespace" language="C++">
    <compoundname>ostendo</compoundname>
    <innerclass refid="structostendo_1_1Pos" prot="public">ostendo::Pos</innerclass>
    <innerclass refid="structostendo_1_1Var" prot="public">ostendo::Var</innerclass>
    <innerclass refid="classostendo_1_1Window" prot="public">ostendo::Window</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceostendo_1ae78fb0e171a88eb8820d8d6a894463f4" prot="public" static="no">
        <name>VarType</name>
        <enumvalue id="namespaceostendo_1ae78fb0e171a88eb8820d8d6a894463f4ab2b3795a506a3e38b4c00c96b9193b81" prot="public">
          <name>INT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets the variable type to be integer </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1ae78fb0e171a88eb8820d8d6a894463f4a62b746a7f8691e7b0010c7c78cc3714b" prot="public">
          <name>DOUBLE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets the variable type to be doubles </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1ae78fb0e171a88eb8820d8d6a894463f4a26583ec8ca995b14e769c98e6025bbb3" prot="public">
          <name>STRING</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets the variable type to be strings </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1ae78fb0e171a88eb8820d8d6a894463f4a8c79b343b56c9861211e496c7276fb64" prot="public">
          <name>BOOL</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets the variable type to be boolians </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Declares the posible types of the variable structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/types.hpp" line="7" column="1" bodyfile="ostendo_files/types.hpp" bodystart="7" bodyend="12"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceostendo_1aa031b855a10fa72d112d6b7287c8f2ec" prot="public" static="no">
        <name>WINDOW_PARTS</name>
        <enumvalue id="namespaceostendo_1aa031b855a10fa72d112d6b7287c8f2eca26a94c1892f3cbff5ab7e6d31b5cb77c" prot="public">
          <name>WIN_BORDER</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Selects the window border. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1aa031b855a10fa72d112d6b7287c8f2eca9c4bc15f158c6523e71a9a66b020fbab" prot="public">
          <name>WIN_TITLE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Selects the window title. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1aa031b855a10fa72d112d6b7287c8f2eca177402ad0ac6b02593972fedbc58020e" prot="public">
          <name>WIN_TEXT</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Selects the window test. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1aa031b855a10fa72d112d6b7287c8f2ecac01b3c91073d3e21325cc8a082cd7baa" prot="public">
          <name>WIN_BACKGROUND</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Selects the window background. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Declaration for different components of the window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/window.hpp" line="10" column="1" bodyfile="ostendo_files/window.hpp" bodystart="10" bodyend="15"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceostendo_1a804202ffcab31ce4e007ff0c9d5249c6" prot="public" static="no">
        <name>ATTRS</name>
        <enumvalue id="namespaceostendo_1a804202ffcab31ce4e007ff0c9d5249c6aaf0b8945bf817b057d16dabd79fdbf05" prot="public">
          <name>ALTCHAR</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Uses alternate character set. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1a804202ffcab31ce4e007ff0c9d5249c6a0ad98e6d41bc73832fa0cec6194d02d3" prot="public">
          <name>BLINK</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets output to blinking (If posible in terminal emulator). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1a804202ffcab31ce4e007ff0c9d5249c6a434b908118752e03181b584a12f497fc" prot="public">
          <name>BOLD</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets output to bold. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1a804202ffcab31ce4e007ff0c9d5249c6a6e9f2e6ee917da1f2ebfa80cf004c442" prot="public">
          <name>DIM</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets output to dim colors. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1a804202ffcab31ce4e007ff0c9d5249c6ae4cc920865a0016b81290e5259d9f60f" prot="public">
          <name>INVIS</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets output text to be invisable. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1a804202ffcab31ce4e007ff0c9d5249c6af6041deb5c5e9bdc72db61bef8bbb0fd" prot="public">
          <name>PROTECT</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets output mode to protected. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1a804202ffcab31ce4e007ff0c9d5249c6a88187ffc48ef6b41163c10634644e1a8" prot="public">
          <name>REVERSE</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets output to reverse mode. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1a804202ffcab31ce4e007ff0c9d5249c6a50201ccd0790154700be098072253dcd" prot="public">
          <name>STANDOUT</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets output to be heighlighted. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceostendo_1a804202ffcab31ce4e007ff0c9d5249c6af00877dea0b044edc80f9205f5695f0d" prot="public">
          <name>UNDERLINE</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sets output to be underlined. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Declaration for different output attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/window.hpp" line="17" column="1" bodyfile="ostendo_files/window.hpp" bodystart="17" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceostendo_1a4c5850c8a109e159e874ecce8a5dc62a" prot="public" static="no" mutable="no">
        <type><ref refid="structostendo_1_1Pos" kindref="compound">Pos</ref></type>
        <definition>Pos ostendo::std_scr</definition>
        <argsstring></argsstring>
        <name>std_scr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Width and height data for full window, measured at startup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.cpp" line="8" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceostendo_1ab45e3689aa0cb8a2e3a175c0aed97880" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="classostendo_1_1Window" kindref="compound">Window</ref> &gt;</type>
        <definition>std::map&lt; std::string, Window &gt; ostendo::windows</definition>
        <argsstring></argsstring>
        <name>windows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optional map for windows, to link windows with given name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.cpp" line="9" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceostendo_1a3267a8b4ac0d3934af4bf5f8079d0f72" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ostendo::win_index</definition>
        <argsstring></argsstring>
        <name>win_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current window index, from windows map. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.cpp" line="10" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceostendo_1aaece4e9a0bcd75df4724bf97c628c12e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ostendo::color_init</definition>
        <argsstring></argsstring>
        <name>color_init</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Boolian to check if colors have been initialized. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.cpp" line="11" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceostendo_1a6de3757551a0461ef565d035547e4408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> &gt;</type>
        <definition>std::vector&lt; ostendo::Var &gt; ostendo::Form</definition>
        <argsstring>(ostendo::Window win, std::vector&lt; Var &gt; fields)</argsstring>
        <name>Form</name>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">ostendo::Window</ref></type>
          <declname>win</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> &gt;</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple form function to get several inputs from the user. This function takes a window, and a set of inputs to request of the user. After the user enters the values for the requested inputs, the values are returned. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> to use for displaying inputs. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fields</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of <ref refid="structostendo_1_1Var" kindref="compound">Var</ref>&apos;s for taking in input from the user. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of <ref refid="structostendo_1_1Var" kindref="compound">Var</ref>&apos;s filled with user input. </para></simplesect>
<simplesect kind="see"><para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref>, <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/form.hpp" line="16" column="1" bodyfile="ostendo_files/form.cpp" bodystart="8" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a75491bb403d248c50aafc1f5eb310d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ostendo::GetVarStr</definition>
        <argsstring>(Var in_var, int width)</argsstring>
        <name>GetVarStr</name>
        <param>
          <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
          <declname>in_var</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the string representation of the variable to display. This function reads the <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> object, and creates a string to represent the data stored by the object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> to interpret. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum width for return string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation of in_var. </para></simplesect>
<simplesect kind="see"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/form.hpp" line="25" column="1" bodyfile="ostendo_files/form.cpp" bodystart="94" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a0eff2d6c60790fa96f06511e3a01f3a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
        <definition>ostendo::Var ostendo::DownArrow</definition>
        <argsstring>(Var in_var, Window win)</argsstring>
        <name>DownArrow</name>
        <param>
          <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
          <declname>in_var</declname>
        </param>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">Window</ref></type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles form user input arrow key down. Provides functionality for different <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> types for the user input of down arrow key. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> to apply action to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> to display to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> after action is applied. </para></simplesect>
<simplesect kind="see"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref>, <ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/form.hpp" line="34" column="1" bodyfile="ostendo_files/form.cpp" bodystart="152" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1abd61a4387f4057a821127c78c5de14df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
        <definition>ostendo::Var ostendo::UpArrow</definition>
        <argsstring>(Var in_var, Window win)</argsstring>
        <name>UpArrow</name>
        <param>
          <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
          <declname>in_var</declname>
        </param>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">Window</ref></type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles form user input arrow key up. Provides functionality for different <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> types for the user input of up arrow key. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> to apply action to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> to display to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> after action is applied. </para></simplesect>
<simplesect kind="see"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref>, <ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/form.hpp" line="43" column="1" bodyfile="ostendo_files/form.cpp" bodystart="172" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a9306123175f6b620de11b774fbfb5ec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
        <definition>ostendo::Var ostendo::RightArrow</definition>
        <argsstring>(Var in_var, Window win)</argsstring>
        <name>RightArrow</name>
        <param>
          <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
          <declname>in_var</declname>
        </param>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">Window</ref></type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles form user input arrow key right. Provides functionality for different <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> types for the user input of right arrow key. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> to apply action to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> to display to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> after action is applied. </para></simplesect>
<simplesect kind="see"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref>, <ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/form.hpp" line="52" column="1" bodyfile="ostendo_files/form.cpp" bodystart="193" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1ab912de20925f952a5056414bfbdaeeda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
        <definition>ostendo::Var ostendo::LeftArrow</definition>
        <argsstring>(Var in_var, Window win)</argsstring>
        <name>LeftArrow</name>
        <param>
          <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
          <declname>in_var</declname>
        </param>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">Window</ref></type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles form user input arrow key left. Provides functionality for different <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> types for the user input of left arrow key. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> to apply action to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> to display to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> after action is applied. </para></simplesect>
<simplesect kind="see"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref>, <ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/form.hpp" line="61" column="1" bodyfile="ostendo_files/form.cpp" bodystart="211" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a9279674ead9b9c27ebc228430c1abfbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
        <definition>ostendo::Var ostendo::Enter</definition>
        <argsstring>(Var in_var, Window win)</argsstring>
        <name>Enter</name>
        <param>
          <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
          <declname>in_var</declname>
        </param>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">Window</ref></type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles form user input enter key. Provides functionality for different <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> types for the user input of enter key. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> to apply action to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> to display to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> after action is applied. </para></simplesect>
<simplesect kind="see"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref>, <ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/form.hpp" line="70" column="1" bodyfile="ostendo_files/form.cpp" bodystart="222" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1ab4fddb801c2f32c114a4e3ef0c9bc953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
        <definition>ostendo::Var ostendo::Backspace</definition>
        <argsstring>(Var in_var, Window win)</argsstring>
        <name>Backspace</name>
        <param>
          <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
          <declname>in_var</declname>
        </param>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">Window</ref></type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles form user input backspace key. Provides functionality for different <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> types for the user input of backspace key. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> to apply action to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> to display to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> after action is applied. </para></simplesect>
<simplesect kind="see"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref>, <ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/form.hpp" line="79" column="1" bodyfile="ostendo_files/form.cpp" bodystart="232" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1ac7a01c5f1ce53b6361e62f349f8f5ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
        <definition>ostendo::Var ostendo::Add</definition>
        <argsstring>(Var in_var, int ch, Window win)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="structostendo_1_1Var" kindref="compound">Var</ref></type>
          <declname>in_var</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">Window</ref></type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles form user input of any other key. Provides functionality for different <ref refid="structostendo_1_1Var" kindref="compound">Var</ref> types for the user input of any other key. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> to apply action to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>Character representation of key input. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> to display to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref> after action is applied. </para></simplesect>
<simplesect kind="see"><para><ref refid="structostendo_1_1Var" kindref="compound">Var</ref>, <ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/form.hpp" line="89" column="1" bodyfile="ostendo_files/form.cpp" bodystart="252" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a7046839a0becea8636f4136c94b4cc31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ostendo::Menu</definition>
        <argsstring>(ostendo::Window win, std::vector&lt; std::string &gt; options)</argsstring>
        <name>Menu</name>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">ostendo::Window</ref></type>
          <declname>win</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Menu function for selecting an option from a set. This function takes a set of options, and a window, then provides a simple user interface for selecting one of the provided options. This selected option is then returned. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> to use to display all options. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options that the user must select from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String from selected option of Options. </para></simplesect>
<simplesect kind="see"><para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/menu.hpp" line="16" column="1" bodyfile="ostendo_files/menu.cpp" bodystart="8" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1acada6eef78aaae2a103761e6b3122a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostendo::InitOstendo</definition>
        <argsstring>(bool color=false, int time_out=-1)</argsstring>
        <name>InitOstendo</name>
        <param>
          <type>bool</type>
          <declname>color</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>time_out</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Initializes Ostendo/Ncurses. </para>        </briefdescription>
        <detaileddescription>
<para>Initializes ncurses with default settings, and enables keypad input, and reads std_scr data. Optionaly enables color, disables cursor, and sets input timeout time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines if colors should be enabled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cursor</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines if cursor should be disabled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_out</parametername>
</parameternamelist>
<parameterdescription>
<para>Sets the time out time for intput. -1 for no time out. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="namespaceostendo_1a4c5850c8a109e159e874ecce8a5dc62a" kindref="member">std_scr</ref>, <ref refid="namespaceostendo_1ab45e3689aa0cb8a2e3a175c0aed97880" kindref="member">windows</ref>, <ref refid="namespaceostendo_1aaece4e9a0bcd75df4724bf97c628c12e" kindref="member">color_init</ref>, <ref refid="namespaceostendo_1ae151d449ffec660866ee7c8ac75892da" kindref="member">TermOstendo()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.hpp" line="27" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="14" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1ae151d449ffec660866ee7c8ac75892da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostendo::TermOstendo</definition>
        <argsstring>()</argsstring>
        <name>TermOstendo</name>
        <briefdescription>
<para>Terminates Ostendo/Ncurses. </para>        </briefdescription>
        <detaileddescription>
<para>Terminates ncurses, and returns the console to standard settings. <simplesect kind="see"><para><ref refid="namespaceostendo_1acada6eef78aaae2a103761e6b3122a7c" kindref="member">InitOstendo()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.hpp" line="32" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a47ee72208333eea02c3737d540d0267b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostendo::InitWindow</definition>
        <argsstring>(std::string name)</argsstring>
        <name>InitWindow</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Creates a new window. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a new window, and adds it to windows. The window has the same dimensions of std_scr. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the window for the key in windows map. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="namespaceostendo_1ab45e3689aa0cb8a2e3a175c0aed97880" kindref="member">windows</ref>, <ref refid="namespaceostendo_1a4c5850c8a109e159e874ecce8a5dc62a" kindref="member">std_scr</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.hpp" line="39" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a9a1f177f0bc76d81901078af708114f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostendo::InitWindow</definition>
        <argsstring>(std::string name, int width, int height)</argsstring>
        <name>InitWindow</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Creates a new window. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a new window, and adds it to windows. The window is positioned at 0,0 with given width and height. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the window for the key in windows map. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the window in characters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The height of the window in characters. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="namespaceostendo_1ab45e3689aa0cb8a2e3a175c0aed97880" kindref="member">windows</ref>, <ref refid="namespaceostendo_1a4c5850c8a109e159e874ecce8a5dc62a" kindref="member">std_scr</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.hpp" line="48" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a471c4077531c8fd99d79c1faf7a0d09e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostendo::InitWindow</definition>
        <argsstring>(std::string name, int width, int height, int x, int y)</argsstring>
        <name>InitWindow</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Creates a new window. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a new window, and adds it to windows. The window is at a given position with a given width and height. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the window for the key in windows map. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the window in characters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The height of the window in characters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x position of the window in characters from the left. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position of the window in characters from the top. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="namespaceostendo_1ab45e3689aa0cb8a2e3a175c0aed97880" kindref="member">windows</ref>, <ref refid="namespaceostendo_1a4c5850c8a109e159e874ecce8a5dc62a" kindref="member">std_scr</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.hpp" line="59" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a8d3e9d8ec26e75c7fd77ef392ecd6e06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostendo::TermWindow</definition>
        <argsstring>(std::string name)</argsstring>
        <name>TermWindow</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Terminates a window. </para>        </briefdescription>
        <detaileddescription>
<para>Termainates a specified window from the windows map. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the window to be deleted. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="namespaceostendo_1ab45e3689aa0cb8a2e3a175c0aed97880" kindref="member">windows</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.hpp" line="65" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a892fb62097748762befae0441bcc4f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostendo::LoadColors</definition>
        <argsstring>()</argsstring>
        <name>LoadColors</name>
        <briefdescription>
<para>Loads console color pairs. </para>        </briefdescription>
        <detaileddescription>
<para>Loads every combination of the console color pairs, if colors are initialized. <simplesect kind="see"><para><ref refid="namespaceostendo_1aaece4e9a0bcd75df4724bf97c628c12e" kindref="member">color_init</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/ostendo.hpp" line="71" column="1" bodyfile="ostendo_files/ostendo.cpp" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a3d2c591339109330938a42d576c9e81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ostendo::TextBox</definition>
        <argsstring>(ostendo::Window win, std::string base=&quot;&quot;)</argsstring>
        <name>TextBox</name>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">ostendo::Window</ref></type>
          <declname>win</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>base</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for basic extended text entry from user. This function alows the user to write text to a text box, and when compleated, the writen text is formated into a string. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>window to display to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting string to display in text box. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String of what user entered. </para></simplesect>
<simplesect kind="see"><para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/text_box.hpp" line="13" column="1" bodyfile="ostendo_files/text_box.cpp" bodystart="7" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a2f50af8d4996899c0906b9c78e045e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ostendo::TextBox</definition>
        <argsstring>(ostendo::Window win, std::vector&lt; std::string &gt; base)</argsstring>
        <name>TextBox</name>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">ostendo::Window</ref></type>
          <declname>win</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for basic extended text entry from user. This function alows the user to write text to a text box, and when compleated, the writen text is formated into a string. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>window to display to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting vector of strings representing different lines of text. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String of what user entered. </para></simplesect>
<simplesect kind="see"><para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/text_box.hpp" line="23" column="1" bodyfile="ostendo_files/text_box.cpp" bodystart="21" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a96fb1afad5e7a28a2c1f63066930683f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; ostendo::VTextBox</definition>
        <argsstring>(ostendo::Window win, std::string base=&quot;&quot;)</argsstring>
        <name>VTextBox</name>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">ostendo::Window</ref></type>
          <declname>win</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>base</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for basic extended text entry from user. This function alows the user to write text to a text box, and when compleated, the writen text is formated into a a vector of strings, each representing a lines of text. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>window to display to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting string to display in text box. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of strings representing the different lines of input from the user. </para></simplesect>
<simplesect kind="see"><para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/text_box.hpp" line="34" column="1" bodyfile="ostendo_files/text_box.cpp" bodystart="74" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1ac2ce30296ad60b1e02258e3d5c1e8b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; ostendo::VTextBox</definition>
        <argsstring>(ostendo::Window win, std::vector&lt; std::string &gt; base)</argsstring>
        <name>VTextBox</name>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">ostendo::Window</ref></type>
          <declname>win</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for basic extended text entry from user. This function alows the user to write text to a text box, and when compleated, the writen text is formated into a a vector of strings, each representing a lines of text. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>window to display to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting vector of stirngs representing different lines of text. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of strings representing the different lines of input from the user. </para></simplesect>
<simplesect kind="see"><para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/text_box.hpp" line="46" column="1" bodyfile="ostendo_files/text_box.cpp" bodystart="90" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a9bb1a56540aa7a03b6e8af5a347950d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostendo::DisplayLines</definition>
        <argsstring>(ostendo::Window win, std::vector&lt; std::string &gt; lines, int current_line, int &amp;start_line)</argsstring>
        <name>DisplayLines</name>
        <param>
          <type><ref refid="classostendo_1_1Window" kindref="compound">ostendo::Window</ref></type>
          <declname>win</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>lines</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_line</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>start_line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Displays lines from a vector of strings. Displays the lines from a vector of string to a given window, and auto centers the current line, so that it is always on screen. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> to display to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lines</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of string to display. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_line</parametername>
</parameternamelist>
<parameterdescription>
<para>Current line to center in window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_line</parametername>
</parameternamelist>
<parameterdescription>
<para>line of vector to begin display from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classostendo_1_1Window" kindref="compound">Window</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/text_box.hpp" line="57" column="1" bodyfile="ostendo_files/text_box.cpp" bodystart="135" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a5703ea1e4f426c0216fc7f36708a4539" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structostendo_1_1Pos" kindref="compound">Pos</ref></type>
        <definition>Pos ostendo::make_pos</definition>
        <argsstring>(int x, int y, int w, int h)</argsstring>
        <name>make_pos</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Creates a new position object. </para>        </briefdescription>
        <detaileddescription>
<para>Creates position object given the four terms. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X term for position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y term for position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>Width term for position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Height term for position. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structostendo_1_1Pos" kindref="compound">Pos</ref> New position structure from given values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/types.hpp" line="62" column="1" bodyfile="ostendo_files/types.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostendo_1a182badf5647b8bae4d48aa1e447b9d80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structostendo_1_1Pos" kindref="compound">Pos</ref></type>
        <definition>Pos ostendo::make_pos</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>make_pos</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Creates a new position object. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a position object given two terms. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X term for position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y term for position. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structostendo_1_1Pos" kindref="compound">Pos</ref> New position structure from given values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ostendo_files/types.hpp" line="69" column="1" bodyfile="ostendo_files/types.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Core namespace for all Ostendo methods. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ostendo_files/form.hpp" line="6" column="1"/>
  </compounddef>
</doxygen>
